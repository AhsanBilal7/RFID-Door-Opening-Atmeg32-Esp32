
ATmega32_SPI_Slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007a4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000026  00800060  000007a4  00000818  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  0000083e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000089c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  000008d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000afe  00000000  00000000  00000968  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000078f  00000000  00000000  00001466  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000559  00000000  00000000  00001bf5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f4  00000000  00000000  00002150  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000040d  00000000  00000000  00002244  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003d7  00000000  00000000  00002651  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002a28  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ea       	ldi	r30, 0xA4	; 164
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 38       	cpi	r26, 0x86	; 134
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include <string.h>						/* Include string header file */
#include "LCD_16x2_H_file.h"			/* Include LCD header file */
#include "SPI_Slave_H_file.h"			/* Include SPI slave header file */

int main(void)
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	00 d0       	rcall	.+0      	; 0x88 <main+0x6>
  88:	00 d0       	rcall	.+0      	; 0x8a <main+0x8>
  8a:	1f 92       	push	r1
  8c:	cd b7       	in	r28, 0x3d	; 61
  8e:	de b7       	in	r29, 0x3e	; 62
	uint8_t count;
	char buffer[5];
	
	LCD_Init();
  90:	0e 94 99 00 	call	0x132	; 0x132 <LCD_Init>
	SPI_Init();
  94:	0e 94 db 00 	call	0x1b6	; 0x1b6 <SPI_Init>
	
	LCD_String_xy(1, 0, "Slave Device");
  98:	40 e6       	ldi	r20, 0x60	; 96
  9a:	50 e0       	ldi	r21, 0x00	; 0
  9c:	60 e0       	ldi	r22, 0x00	; 0
  9e:	81 e0       	ldi	r24, 0x01	; 1
  a0:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String_xy>
	LCD_String_xy(2, 0, "Receive Data:    ");
  a4:	4d e6       	ldi	r20, 0x6D	; 109
  a6:	50 e0       	ldi	r21, 0x00	; 0
  a8:	60 e0       	ldi	r22, 0x00	; 0
  aa:	82 e0       	ldi	r24, 0x02	; 2
  ac:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String_xy>
	while (1)
	{
		count = SPI_Receive();
		sprintf(buffer, "%d   ", count);
  b0:	0f 2e       	mov	r0, r31
  b2:	ff e7       	ldi	r31, 0x7F	; 127
  b4:	ef 2e       	mov	r14, r31
  b6:	f0 e0       	ldi	r31, 0x00	; 0
  b8:	ff 2e       	mov	r15, r31
  ba:	f0 2d       	mov	r31, r0
  bc:	8e 01       	movw	r16, r28
  be:	0f 5f       	subi	r16, 0xFF	; 255
  c0:	1f 4f       	sbci	r17, 0xFF	; 255
	
	LCD_String_xy(1, 0, "Slave Device");
	LCD_String_xy(2, 0, "Receive Data:    ");
	while (1)
	{
		count = SPI_Receive();
  c2:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <SPI_Receive>
		sprintf(buffer, "%d   ", count);
  c6:	1f 92       	push	r1
  c8:	8f 93       	push	r24
  ca:	ff 92       	push	r15
  cc:	ef 92       	push	r14
  ce:	1f 93       	push	r17
  d0:	0f 93       	push	r16
  d2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <sprintf>
		LCD_String_xy(2, 13, buffer);
  d6:	a8 01       	movw	r20, r16
  d8:	6d e0       	ldi	r22, 0x0D	; 13
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	0e 94 c3 00 	call	0x186	; 0x186 <LCD_String_xy>
  e0:	0f 90       	pop	r0
  e2:	0f 90       	pop	r0
  e4:	0f 90       	pop	r0
  e6:	0f 90       	pop	r0
  e8:	0f 90       	pop	r0
  ea:	0f 90       	pop	r0
  ec:	ea cf       	rjmp	.-44     	; 0xc2 <main+0x40>

000000ee <LCD_Command>:
#include "LCD_16x2_H_file.h"						/* Include LCD header file */


void LCD_Command (char cmd)							/* LCD command write function */
{
	LCD_Data_Port = cmd;							/* Write command data to LCD data port */
  ee:	82 bb       	out	0x12, r24	; 18
	LCD_Command_Port &= ~((1<<RS)|(1<<RW));			/* Make RS LOW (command reg.), RW LOW (Write) */
  f0:	85 b3       	in	r24, 0x15	; 21
  f2:	87 7e       	andi	r24, 0xE7	; 231
  f4:	85 bb       	out	0x15, r24	; 21
	LCD_Command_Port |= (1<<EN);					/* High to Low transition on EN (Enable) */
  f6:	aa 9a       	sbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	8a 95       	dec	r24
  fc:	f1 f7       	brne	.-4      	; 0xfa <LCD_Command+0xc>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <LCD_Command+0x12>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 100:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 102:	8f e6       	ldi	r24, 0x6F	; 111
 104:	97 e1       	ldi	r25, 0x17	; 23
 106:	01 97       	sbiw	r24, 0x01	; 1
 108:	f1 f7       	brne	.-4      	; 0x106 <LCD_Command+0x18>
 10a:	00 c0       	rjmp	.+0      	; 0x10c <LCD_Command+0x1e>
 10c:	00 00       	nop
 10e:	08 95       	ret

00000110 <LCD_Char>:
	_delay_ms(3);									/* Wait little bit */
}

void LCD_Char (char char_data)						/* LCD data write function */
{
	LCD_Data_Port = char_data;						/* Write data to LCD data port */
 110:	82 bb       	out	0x12, r24	; 18
	LCD_Command_Port &= ~(1<<RW);					/* Make RW LOW (Write) */
 112:	ab 98       	cbi	0x15, 3	; 21
	LCD_Command_Port |= (1<<EN)|(1<<RS);			/* Make RS HIGH (data reg.) and High to Low transition on EN (Enable) */
 114:	85 b3       	in	r24, 0x15	; 21
 116:	84 61       	ori	r24, 0x14	; 20
 118:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	82 e0       	ldi	r24, 0x02	; 2
 11c:	8a 95       	dec	r24
 11e:	f1 f7       	brne	.-4      	; 0x11c <LCD_Char+0xc>
 120:	00 c0       	rjmp	.+0      	; 0x122 <LCD_Char+0x12>
	_delay_us(1);
	LCD_Command_Port &= ~(1<<EN);
 122:	aa 98       	cbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 124:	8f ec       	ldi	r24, 0xCF	; 207
 126:	97 e0       	ldi	r25, 0x07	; 7
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <LCD_Char+0x18>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <LCD_Char+0x1e>
 12e:	00 00       	nop
 130:	08 95       	ret

00000132 <LCD_Init>:
	_delay_ms(1);									/* Wait little bit */
}

void LCD_Init (void)								/* LCD Initialize function */
{
	LCD_Command_Dir |= (1<<RS)|(1<<RW)|(1<<EN);		/* Make LCD command port direction as o/p */
 132:	84 b3       	in	r24, 0x14	; 20
 134:	8c 61       	ori	r24, 0x1C	; 28
 136:	84 bb       	out	0x14, r24	; 20
	LCD_Data_Dir = 0xFF;							/* Make LCD data port direction as o/p */
 138:	8f ef       	ldi	r24, 0xFF	; 255
 13a:	81 bb       	out	0x11, r24	; 17
 13c:	8f e3       	ldi	r24, 0x3F	; 63
 13e:	9c e9       	ldi	r25, 0x9C	; 156
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <LCD_Init+0xe>
 144:	00 c0       	rjmp	.+0      	; 0x146 <LCD_Init+0x14>
 146:	00 00       	nop
	
	_delay_ms(20);									/* LCD power up time to get things ready, it should always >15ms */
	LCD_Command (0x38);								/* Initialize 16X2 LCD in 8bit mode */
 148:	88 e3       	ldi	r24, 0x38	; 56
 14a:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x0C);								/* Display ON, Cursor OFF command */
 14e:	8c e0       	ldi	r24, 0x0C	; 12
 150:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x06);								/* Auto Increment cursor */
 154:	86 e0       	ldi	r24, 0x06	; 6
 156:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x01);								/* Clear LCD command */
 15a:	81 e0       	ldi	r24, 0x01	; 1
 15c:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_Command (0x80);								/* 8 is for first line and 0 is for 0th position */
 160:	80 e8       	ldi	r24, 0x80	; 128
 162:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
 166:	08 95       	ret

00000168 <LCD_String>:
}

void LCD_String (char *str)							/* Send string to LCD function */
{
 168:	cf 93       	push	r28
 16a:	df 93       	push	r29
 16c:	ec 01       	movw	r28, r24
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 16e:	88 81       	ld	r24, Y
 170:	88 23       	and	r24, r24
 172:	31 f0       	breq	.+12     	; 0x180 <LCD_String+0x18>
 174:	21 96       	adiw	r28, 0x01	; 1
	{
		LCD_Char (str[i]);							/* Call LCD data write */
 176:	0e 94 88 00 	call	0x110	; 0x110 <LCD_Char>
}

void LCD_String (char *str)							/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)							/* Send each char of string till the NULL */
 17a:	89 91       	ld	r24, Y+
 17c:	81 11       	cpse	r24, r1
 17e:	fb cf       	rjmp	.-10     	; 0x176 <LCD_String+0xe>
	{
		LCD_Char (str[i]);							/* Call LCD data write */
	}
}
 180:	df 91       	pop	r29
 182:	cf 91       	pop	r28
 184:	08 95       	ret

00000186 <LCD_String_xy>:

void LCD_String_xy (char row, char pos, char *str)	/* Send string to LCD function */
{
 186:	cf 93       	push	r28
 188:	df 93       	push	r29
 18a:	ea 01       	movw	r28, r20
	if (row == 1)
 18c:	81 30       	cpi	r24, 0x01	; 1
 18e:	31 f4       	brne	.+12     	; 0x19c <LCD_String_xy+0x16>
		LCD_Command((pos & 0x0F)|0x80);				/* Command of first row and required position<16 */
 190:	86 2f       	mov	r24, r22
 192:	8f 70       	andi	r24, 0x0F	; 15
 194:	80 68       	ori	r24, 0x80	; 128
 196:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
 19a:	07 c0       	rjmp	.+14     	; 0x1aa <LCD_String_xy+0x24>
	else if (row == 2)
 19c:	82 30       	cpi	r24, 0x02	; 2
 19e:	29 f4       	brne	.+10     	; 0x1aa <LCD_String_xy+0x24>
		LCD_Command((pos & 0x0F)|0xC0);				/* Command of Second row and required position<16 */
 1a0:	86 2f       	mov	r24, r22
 1a2:	8f 70       	andi	r24, 0x0F	; 15
 1a4:	80 6c       	ori	r24, 0xC0	; 192
 1a6:	0e 94 77 00 	call	0xee	; 0xee <LCD_Command>
	LCD_String(str);								/* Call LCD string function */
 1aa:	ce 01       	movw	r24, r28
 1ac:	0e 94 b4 00 	call	0x168	; 0x168 <LCD_String>
}
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	08 95       	ret

000001b6 <SPI_Init>:
char SPI_Transmit(char data)					/* SPI transmit data function */
{
	SPDR = data;								/* Write data to SPI data register */
	while(!(SPSR & (1<<SPIF)));					/* Wait till transmission complete */
	return(SPDR);								/* return received data */
}
 1b6:	87 b3       	in	r24, 0x17	; 23
 1b8:	8f 74       	andi	r24, 0x4F	; 79
 1ba:	87 bb       	out	0x17, r24	; 23
 1bc:	be 9a       	sbi	0x17, 6	; 23
 1be:	80 e4       	ldi	r24, 0x40	; 64
 1c0:	8d b9       	out	0x0d, r24	; 13
 1c2:	08 95       	ret

000001c4 <SPI_Receive>:

char SPI_Receive()								/* SPI Receive data function */
{
	while(!(SPSR & (1<<SPIF)));					/* Wait till reception complete */
 1c4:	77 9b       	sbis	0x0e, 7	; 14
 1c6:	fe cf       	rjmp	.-4      	; 0x1c4 <SPI_Receive>
	return(SPDR);								/* return received data */
 1c8:	8f b1       	in	r24, 0x0f	; 15
}
 1ca:	08 95       	ret

000001cc <sprintf>:
 1cc:	ae e0       	ldi	r26, 0x0E	; 14
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	ec ee       	ldi	r30, 0xEC	; 236
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__prologue_saves__+0x1c>
 1d8:	0d 89       	ldd	r16, Y+21	; 0x15
 1da:	1e 89       	ldd	r17, Y+22	; 0x16
 1dc:	86 e0       	ldi	r24, 0x06	; 6
 1de:	8c 83       	std	Y+4, r24	; 0x04
 1e0:	1a 83       	std	Y+2, r17	; 0x02
 1e2:	09 83       	std	Y+1, r16	; 0x01
 1e4:	8f ef       	ldi	r24, 0xFF	; 255
 1e6:	9f e7       	ldi	r25, 0x7F	; 127
 1e8:	9e 83       	std	Y+6, r25	; 0x06
 1ea:	8d 83       	std	Y+5, r24	; 0x05
 1ec:	ae 01       	movw	r20, r28
 1ee:	47 5e       	subi	r20, 0xE7	; 231
 1f0:	5f 4f       	sbci	r21, 0xFF	; 255
 1f2:	6f 89       	ldd	r22, Y+23	; 0x17
 1f4:	78 8d       	ldd	r23, Y+24	; 0x18
 1f6:	ce 01       	movw	r24, r28
 1f8:	01 96       	adiw	r24, 0x01	; 1
 1fa:	0e 94 08 01 	call	0x210	; 0x210 <vfprintf>
 1fe:	ef 81       	ldd	r30, Y+7	; 0x07
 200:	f8 85       	ldd	r31, Y+8	; 0x08
 202:	e0 0f       	add	r30, r16
 204:	f1 1f       	adc	r31, r17
 206:	10 82       	st	Z, r1
 208:	2e 96       	adiw	r28, 0x0e	; 14
 20a:	e4 e0       	ldi	r30, 0x04	; 4
 20c:	0c 94 c3 03 	jmp	0x786	; 0x786 <__epilogue_restores__+0x1c>

00000210 <vfprintf>:
 210:	ab e0       	ldi	r26, 0x0B	; 11
 212:	b0 e0       	ldi	r27, 0x00	; 0
 214:	ee e0       	ldi	r30, 0x0E	; 14
 216:	f1 e0       	ldi	r31, 0x01	; 1
 218:	0c 94 99 03 	jmp	0x732	; 0x732 <__prologue_saves__>
 21c:	6c 01       	movw	r12, r24
 21e:	7b 01       	movw	r14, r22
 220:	8a 01       	movw	r16, r20
 222:	fc 01       	movw	r30, r24
 224:	17 82       	std	Z+7, r1	; 0x07
 226:	16 82       	std	Z+6, r1	; 0x06
 228:	83 81       	ldd	r24, Z+3	; 0x03
 22a:	81 ff       	sbrs	r24, 1
 22c:	cc c1       	rjmp	.+920    	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 22e:	ce 01       	movw	r24, r28
 230:	01 96       	adiw	r24, 0x01	; 1
 232:	3c 01       	movw	r6, r24
 234:	f6 01       	movw	r30, r12
 236:	93 81       	ldd	r25, Z+3	; 0x03
 238:	f7 01       	movw	r30, r14
 23a:	93 fd       	sbrc	r25, 3
 23c:	85 91       	lpm	r24, Z+
 23e:	93 ff       	sbrs	r25, 3
 240:	81 91       	ld	r24, Z+
 242:	7f 01       	movw	r14, r30
 244:	88 23       	and	r24, r24
 246:	09 f4       	brne	.+2      	; 0x24a <vfprintf+0x3a>
 248:	ba c1       	rjmp	.+884    	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 24a:	85 32       	cpi	r24, 0x25	; 37
 24c:	39 f4       	brne	.+14     	; 0x25c <vfprintf+0x4c>
 24e:	93 fd       	sbrc	r25, 3
 250:	85 91       	lpm	r24, Z+
 252:	93 ff       	sbrs	r25, 3
 254:	81 91       	ld	r24, Z+
 256:	7f 01       	movw	r14, r30
 258:	85 32       	cpi	r24, 0x25	; 37
 25a:	29 f4       	brne	.+10     	; 0x266 <vfprintf+0x56>
 25c:	b6 01       	movw	r22, r12
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 ff 02 	call	0x5fe	; 0x5fe <fputc>
 264:	e7 cf       	rjmp	.-50     	; 0x234 <vfprintf+0x24>
 266:	91 2c       	mov	r9, r1
 268:	21 2c       	mov	r2, r1
 26a:	31 2c       	mov	r3, r1
 26c:	ff e1       	ldi	r31, 0x1F	; 31
 26e:	f3 15       	cp	r31, r3
 270:	d8 f0       	brcs	.+54     	; 0x2a8 <vfprintf+0x98>
 272:	8b 32       	cpi	r24, 0x2B	; 43
 274:	79 f0       	breq	.+30     	; 0x294 <vfprintf+0x84>
 276:	38 f4       	brcc	.+14     	; 0x286 <vfprintf+0x76>
 278:	80 32       	cpi	r24, 0x20	; 32
 27a:	79 f0       	breq	.+30     	; 0x29a <vfprintf+0x8a>
 27c:	83 32       	cpi	r24, 0x23	; 35
 27e:	a1 f4       	brne	.+40     	; 0x2a8 <vfprintf+0x98>
 280:	23 2d       	mov	r18, r3
 282:	20 61       	ori	r18, 0x10	; 16
 284:	1d c0       	rjmp	.+58     	; 0x2c0 <vfprintf+0xb0>
 286:	8d 32       	cpi	r24, 0x2D	; 45
 288:	61 f0       	breq	.+24     	; 0x2a2 <vfprintf+0x92>
 28a:	80 33       	cpi	r24, 0x30	; 48
 28c:	69 f4       	brne	.+26     	; 0x2a8 <vfprintf+0x98>
 28e:	23 2d       	mov	r18, r3
 290:	21 60       	ori	r18, 0x01	; 1
 292:	16 c0       	rjmp	.+44     	; 0x2c0 <vfprintf+0xb0>
 294:	83 2d       	mov	r24, r3
 296:	82 60       	ori	r24, 0x02	; 2
 298:	38 2e       	mov	r3, r24
 29a:	e3 2d       	mov	r30, r3
 29c:	e4 60       	ori	r30, 0x04	; 4
 29e:	3e 2e       	mov	r3, r30
 2a0:	2a c0       	rjmp	.+84     	; 0x2f6 <vfprintf+0xe6>
 2a2:	f3 2d       	mov	r31, r3
 2a4:	f8 60       	ori	r31, 0x08	; 8
 2a6:	1d c0       	rjmp	.+58     	; 0x2e2 <vfprintf+0xd2>
 2a8:	37 fc       	sbrc	r3, 7
 2aa:	2d c0       	rjmp	.+90     	; 0x306 <vfprintf+0xf6>
 2ac:	20 ed       	ldi	r18, 0xD0	; 208
 2ae:	28 0f       	add	r18, r24
 2b0:	2a 30       	cpi	r18, 0x0A	; 10
 2b2:	40 f0       	brcs	.+16     	; 0x2c4 <vfprintf+0xb4>
 2b4:	8e 32       	cpi	r24, 0x2E	; 46
 2b6:	b9 f4       	brne	.+46     	; 0x2e6 <vfprintf+0xd6>
 2b8:	36 fc       	sbrc	r3, 6
 2ba:	81 c1       	rjmp	.+770    	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 2bc:	23 2d       	mov	r18, r3
 2be:	20 64       	ori	r18, 0x40	; 64
 2c0:	32 2e       	mov	r3, r18
 2c2:	19 c0       	rjmp	.+50     	; 0x2f6 <vfprintf+0xe6>
 2c4:	36 fe       	sbrs	r3, 6
 2c6:	06 c0       	rjmp	.+12     	; 0x2d4 <vfprintf+0xc4>
 2c8:	8a e0       	ldi	r24, 0x0A	; 10
 2ca:	98 9e       	mul	r9, r24
 2cc:	20 0d       	add	r18, r0
 2ce:	11 24       	eor	r1, r1
 2d0:	92 2e       	mov	r9, r18
 2d2:	11 c0       	rjmp	.+34     	; 0x2f6 <vfprintf+0xe6>
 2d4:	ea e0       	ldi	r30, 0x0A	; 10
 2d6:	2e 9e       	mul	r2, r30
 2d8:	20 0d       	add	r18, r0
 2da:	11 24       	eor	r1, r1
 2dc:	22 2e       	mov	r2, r18
 2de:	f3 2d       	mov	r31, r3
 2e0:	f0 62       	ori	r31, 0x20	; 32
 2e2:	3f 2e       	mov	r3, r31
 2e4:	08 c0       	rjmp	.+16     	; 0x2f6 <vfprintf+0xe6>
 2e6:	8c 36       	cpi	r24, 0x6C	; 108
 2e8:	21 f4       	brne	.+8      	; 0x2f2 <vfprintf+0xe2>
 2ea:	83 2d       	mov	r24, r3
 2ec:	80 68       	ori	r24, 0x80	; 128
 2ee:	38 2e       	mov	r3, r24
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <vfprintf+0xe6>
 2f2:	88 36       	cpi	r24, 0x68	; 104
 2f4:	41 f4       	brne	.+16     	; 0x306 <vfprintf+0xf6>
 2f6:	f7 01       	movw	r30, r14
 2f8:	93 fd       	sbrc	r25, 3
 2fa:	85 91       	lpm	r24, Z+
 2fc:	93 ff       	sbrs	r25, 3
 2fe:	81 91       	ld	r24, Z+
 300:	7f 01       	movw	r14, r30
 302:	81 11       	cpse	r24, r1
 304:	b3 cf       	rjmp	.-154    	; 0x26c <vfprintf+0x5c>
 306:	98 2f       	mov	r25, r24
 308:	9f 7d       	andi	r25, 0xDF	; 223
 30a:	95 54       	subi	r25, 0x45	; 69
 30c:	93 30       	cpi	r25, 0x03	; 3
 30e:	28 f4       	brcc	.+10     	; 0x31a <vfprintf+0x10a>
 310:	0c 5f       	subi	r16, 0xFC	; 252
 312:	1f 4f       	sbci	r17, 0xFF	; 255
 314:	9f e3       	ldi	r25, 0x3F	; 63
 316:	99 83       	std	Y+1, r25	; 0x01
 318:	0d c0       	rjmp	.+26     	; 0x334 <vfprintf+0x124>
 31a:	83 36       	cpi	r24, 0x63	; 99
 31c:	31 f0       	breq	.+12     	; 0x32a <vfprintf+0x11a>
 31e:	83 37       	cpi	r24, 0x73	; 115
 320:	71 f0       	breq	.+28     	; 0x33e <vfprintf+0x12e>
 322:	83 35       	cpi	r24, 0x53	; 83
 324:	09 f0       	breq	.+2      	; 0x328 <vfprintf+0x118>
 326:	59 c0       	rjmp	.+178    	; 0x3da <vfprintf+0x1ca>
 328:	21 c0       	rjmp	.+66     	; 0x36c <vfprintf+0x15c>
 32a:	f8 01       	movw	r30, r16
 32c:	80 81       	ld	r24, Z
 32e:	89 83       	std	Y+1, r24	; 0x01
 330:	0e 5f       	subi	r16, 0xFE	; 254
 332:	1f 4f       	sbci	r17, 0xFF	; 255
 334:	88 24       	eor	r8, r8
 336:	83 94       	inc	r8
 338:	91 2c       	mov	r9, r1
 33a:	53 01       	movw	r10, r6
 33c:	13 c0       	rjmp	.+38     	; 0x364 <vfprintf+0x154>
 33e:	28 01       	movw	r4, r16
 340:	f2 e0       	ldi	r31, 0x02	; 2
 342:	4f 0e       	add	r4, r31
 344:	51 1c       	adc	r5, r1
 346:	f8 01       	movw	r30, r16
 348:	a0 80       	ld	r10, Z
 34a:	b1 80       	ldd	r11, Z+1	; 0x01
 34c:	36 fe       	sbrs	r3, 6
 34e:	03 c0       	rjmp	.+6      	; 0x356 <vfprintf+0x146>
 350:	69 2d       	mov	r22, r9
 352:	70 e0       	ldi	r23, 0x00	; 0
 354:	02 c0       	rjmp	.+4      	; 0x35a <vfprintf+0x14a>
 356:	6f ef       	ldi	r22, 0xFF	; 255
 358:	7f ef       	ldi	r23, 0xFF	; 255
 35a:	c5 01       	movw	r24, r10
 35c:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <strnlen>
 360:	4c 01       	movw	r8, r24
 362:	82 01       	movw	r16, r4
 364:	f3 2d       	mov	r31, r3
 366:	ff 77       	andi	r31, 0x7F	; 127
 368:	3f 2e       	mov	r3, r31
 36a:	16 c0       	rjmp	.+44     	; 0x398 <vfprintf+0x188>
 36c:	28 01       	movw	r4, r16
 36e:	22 e0       	ldi	r18, 0x02	; 2
 370:	42 0e       	add	r4, r18
 372:	51 1c       	adc	r5, r1
 374:	f8 01       	movw	r30, r16
 376:	a0 80       	ld	r10, Z
 378:	b1 80       	ldd	r11, Z+1	; 0x01
 37a:	36 fe       	sbrs	r3, 6
 37c:	03 c0       	rjmp	.+6      	; 0x384 <vfprintf+0x174>
 37e:	69 2d       	mov	r22, r9
 380:	70 e0       	ldi	r23, 0x00	; 0
 382:	02 c0       	rjmp	.+4      	; 0x388 <vfprintf+0x178>
 384:	6f ef       	ldi	r22, 0xFF	; 255
 386:	7f ef       	ldi	r23, 0xFF	; 255
 388:	c5 01       	movw	r24, r10
 38a:	0e 94 e9 02 	call	0x5d2	; 0x5d2 <strnlen_P>
 38e:	4c 01       	movw	r8, r24
 390:	f3 2d       	mov	r31, r3
 392:	f0 68       	ori	r31, 0x80	; 128
 394:	3f 2e       	mov	r3, r31
 396:	82 01       	movw	r16, r4
 398:	33 fc       	sbrc	r3, 3
 39a:	1b c0       	rjmp	.+54     	; 0x3d2 <vfprintf+0x1c2>
 39c:	82 2d       	mov	r24, r2
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	88 16       	cp	r8, r24
 3a2:	99 06       	cpc	r9, r25
 3a4:	b0 f4       	brcc	.+44     	; 0x3d2 <vfprintf+0x1c2>
 3a6:	b6 01       	movw	r22, r12
 3a8:	80 e2       	ldi	r24, 0x20	; 32
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	0e 94 ff 02 	call	0x5fe	; 0x5fe <fputc>
 3b0:	2a 94       	dec	r2
 3b2:	f4 cf       	rjmp	.-24     	; 0x39c <vfprintf+0x18c>
 3b4:	f5 01       	movw	r30, r10
 3b6:	37 fc       	sbrc	r3, 7
 3b8:	85 91       	lpm	r24, Z+
 3ba:	37 fe       	sbrs	r3, 7
 3bc:	81 91       	ld	r24, Z+
 3be:	5f 01       	movw	r10, r30
 3c0:	b6 01       	movw	r22, r12
 3c2:	90 e0       	ldi	r25, 0x00	; 0
 3c4:	0e 94 ff 02 	call	0x5fe	; 0x5fe <fputc>
 3c8:	21 10       	cpse	r2, r1
 3ca:	2a 94       	dec	r2
 3cc:	21 e0       	ldi	r18, 0x01	; 1
 3ce:	82 1a       	sub	r8, r18
 3d0:	91 08       	sbc	r9, r1
 3d2:	81 14       	cp	r8, r1
 3d4:	91 04       	cpc	r9, r1
 3d6:	71 f7       	brne	.-36     	; 0x3b4 <vfprintf+0x1a4>
 3d8:	e8 c0       	rjmp	.+464    	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 3da:	84 36       	cpi	r24, 0x64	; 100
 3dc:	11 f0       	breq	.+4      	; 0x3e2 <vfprintf+0x1d2>
 3de:	89 36       	cpi	r24, 0x69	; 105
 3e0:	41 f5       	brne	.+80     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 3e2:	f8 01       	movw	r30, r16
 3e4:	37 fe       	sbrs	r3, 7
 3e6:	07 c0       	rjmp	.+14     	; 0x3f6 <vfprintf+0x1e6>
 3e8:	60 81       	ld	r22, Z
 3ea:	71 81       	ldd	r23, Z+1	; 0x01
 3ec:	82 81       	ldd	r24, Z+2	; 0x02
 3ee:	93 81       	ldd	r25, Z+3	; 0x03
 3f0:	0c 5f       	subi	r16, 0xFC	; 252
 3f2:	1f 4f       	sbci	r17, 0xFF	; 255
 3f4:	08 c0       	rjmp	.+16     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f6:	60 81       	ld	r22, Z
 3f8:	71 81       	ldd	r23, Z+1	; 0x01
 3fa:	07 2e       	mov	r0, r23
 3fc:	00 0c       	add	r0, r0
 3fe:	88 0b       	sbc	r24, r24
 400:	99 0b       	sbc	r25, r25
 402:	0e 5f       	subi	r16, 0xFE	; 254
 404:	1f 4f       	sbci	r17, 0xFF	; 255
 406:	f3 2d       	mov	r31, r3
 408:	ff 76       	andi	r31, 0x6F	; 111
 40a:	3f 2e       	mov	r3, r31
 40c:	97 ff       	sbrs	r25, 7
 40e:	09 c0       	rjmp	.+18     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 410:	90 95       	com	r25
 412:	80 95       	com	r24
 414:	70 95       	com	r23
 416:	61 95       	neg	r22
 418:	7f 4f       	sbci	r23, 0xFF	; 255
 41a:	8f 4f       	sbci	r24, 0xFF	; 255
 41c:	9f 4f       	sbci	r25, 0xFF	; 255
 41e:	f0 68       	ori	r31, 0x80	; 128
 420:	3f 2e       	mov	r3, r31
 422:	2a e0       	ldi	r18, 0x0A	; 10
 424:	30 e0       	ldi	r19, 0x00	; 0
 426:	a3 01       	movw	r20, r6
 428:	0e 94 3b 03 	call	0x676	; 0x676 <__ultoa_invert>
 42c:	88 2e       	mov	r8, r24
 42e:	86 18       	sub	r8, r6
 430:	45 c0       	rjmp	.+138    	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 432:	85 37       	cpi	r24, 0x75	; 117
 434:	31 f4       	brne	.+12     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 436:	23 2d       	mov	r18, r3
 438:	2f 7e       	andi	r18, 0xEF	; 239
 43a:	b2 2e       	mov	r11, r18
 43c:	2a e0       	ldi	r18, 0x0A	; 10
 43e:	30 e0       	ldi	r19, 0x00	; 0
 440:	25 c0       	rjmp	.+74     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 442:	93 2d       	mov	r25, r3
 444:	99 7f       	andi	r25, 0xF9	; 249
 446:	b9 2e       	mov	r11, r25
 448:	8f 36       	cpi	r24, 0x6F	; 111
 44a:	c1 f0       	breq	.+48     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 44c:	18 f4       	brcc	.+6      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 44e:	88 35       	cpi	r24, 0x58	; 88
 450:	79 f0       	breq	.+30     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 452:	b5 c0       	rjmp	.+362    	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 454:	80 37       	cpi	r24, 0x70	; 112
 456:	19 f0       	breq	.+6      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 458:	88 37       	cpi	r24, 0x78	; 120
 45a:	21 f0       	breq	.+8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 45c:	b0 c0       	rjmp	.+352    	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 45e:	e9 2f       	mov	r30, r25
 460:	e0 61       	ori	r30, 0x10	; 16
 462:	be 2e       	mov	r11, r30
 464:	b4 fe       	sbrs	r11, 4
 466:	0d c0       	rjmp	.+26     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 468:	fb 2d       	mov	r31, r11
 46a:	f4 60       	ori	r31, 0x04	; 4
 46c:	bf 2e       	mov	r11, r31
 46e:	09 c0       	rjmp	.+18     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 470:	34 fe       	sbrs	r3, 4
 472:	0a c0       	rjmp	.+20     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 474:	29 2f       	mov	r18, r25
 476:	26 60       	ori	r18, 0x06	; 6
 478:	b2 2e       	mov	r11, r18
 47a:	06 c0       	rjmp	.+12     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 47c:	28 e0       	ldi	r18, 0x08	; 8
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	05 c0       	rjmp	.+10     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 482:	20 e1       	ldi	r18, 0x10	; 16
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	02 c0       	rjmp	.+4      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 488:	20 e1       	ldi	r18, 0x10	; 16
 48a:	32 e0       	ldi	r19, 0x02	; 2
 48c:	f8 01       	movw	r30, r16
 48e:	b7 fe       	sbrs	r11, 7
 490:	07 c0       	rjmp	.+14     	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
 492:	60 81       	ld	r22, Z
 494:	71 81       	ldd	r23, Z+1	; 0x01
 496:	82 81       	ldd	r24, Z+2	; 0x02
 498:	93 81       	ldd	r25, Z+3	; 0x03
 49a:	0c 5f       	subi	r16, 0xFC	; 252
 49c:	1f 4f       	sbci	r17, 0xFF	; 255
 49e:	06 c0       	rjmp	.+12     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a0:	60 81       	ld	r22, Z
 4a2:	71 81       	ldd	r23, Z+1	; 0x01
 4a4:	80 e0       	ldi	r24, 0x00	; 0
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	0e 5f       	subi	r16, 0xFE	; 254
 4aa:	1f 4f       	sbci	r17, 0xFF	; 255
 4ac:	a3 01       	movw	r20, r6
 4ae:	0e 94 3b 03 	call	0x676	; 0x676 <__ultoa_invert>
 4b2:	88 2e       	mov	r8, r24
 4b4:	86 18       	sub	r8, r6
 4b6:	fb 2d       	mov	r31, r11
 4b8:	ff 77       	andi	r31, 0x7F	; 127
 4ba:	3f 2e       	mov	r3, r31
 4bc:	36 fe       	sbrs	r3, 6
 4be:	0d c0       	rjmp	.+26     	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4c0:	23 2d       	mov	r18, r3
 4c2:	2e 7f       	andi	r18, 0xFE	; 254
 4c4:	a2 2e       	mov	r10, r18
 4c6:	89 14       	cp	r8, r9
 4c8:	58 f4       	brcc	.+22     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4ca:	34 fe       	sbrs	r3, 4
 4cc:	0b c0       	rjmp	.+22     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4ce:	32 fc       	sbrc	r3, 2
 4d0:	09 c0       	rjmp	.+18     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4d2:	83 2d       	mov	r24, r3
 4d4:	8e 7e       	andi	r24, 0xEE	; 238
 4d6:	a8 2e       	mov	r10, r24
 4d8:	05 c0       	rjmp	.+10     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4da:	b8 2c       	mov	r11, r8
 4dc:	a3 2c       	mov	r10, r3
 4de:	03 c0       	rjmp	.+6      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e0:	b8 2c       	mov	r11, r8
 4e2:	01 c0       	rjmp	.+2      	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4e4:	b9 2c       	mov	r11, r9
 4e6:	a4 fe       	sbrs	r10, 4
 4e8:	0f c0       	rjmp	.+30     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4ea:	fe 01       	movw	r30, r28
 4ec:	e8 0d       	add	r30, r8
 4ee:	f1 1d       	adc	r31, r1
 4f0:	80 81       	ld	r24, Z
 4f2:	80 33       	cpi	r24, 0x30	; 48
 4f4:	21 f4       	brne	.+8      	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f6:	9a 2d       	mov	r25, r10
 4f8:	99 7e       	andi	r25, 0xE9	; 233
 4fa:	a9 2e       	mov	r10, r25
 4fc:	09 c0       	rjmp	.+18     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4fe:	a2 fe       	sbrs	r10, 2
 500:	06 c0       	rjmp	.+12     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 502:	b3 94       	inc	r11
 504:	b3 94       	inc	r11
 506:	04 c0       	rjmp	.+8      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 508:	8a 2d       	mov	r24, r10
 50a:	86 78       	andi	r24, 0x86	; 134
 50c:	09 f0       	breq	.+2      	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 50e:	b3 94       	inc	r11
 510:	a3 fc       	sbrc	r10, 3
 512:	11 c0       	rjmp	.+34     	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
 514:	a0 fe       	sbrs	r10, 0
 516:	06 c0       	rjmp	.+12     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 518:	b2 14       	cp	r11, r2
 51a:	88 f4       	brcc	.+34     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 51c:	28 0c       	add	r2, r8
 51e:	92 2c       	mov	r9, r2
 520:	9b 18       	sub	r9, r11
 522:	0e c0       	rjmp	.+28     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 524:	b2 14       	cp	r11, r2
 526:	60 f4       	brcc	.+24     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 528:	b6 01       	movw	r22, r12
 52a:	80 e2       	ldi	r24, 0x20	; 32
 52c:	90 e0       	ldi	r25, 0x00	; 0
 52e:	0e 94 ff 02 	call	0x5fe	; 0x5fe <fputc>
 532:	b3 94       	inc	r11
 534:	f7 cf       	rjmp	.-18     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 536:	b2 14       	cp	r11, r2
 538:	18 f4       	brcc	.+6      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53a:	2b 18       	sub	r2, r11
 53c:	02 c0       	rjmp	.+4      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 53e:	98 2c       	mov	r9, r8
 540:	21 2c       	mov	r2, r1
 542:	a4 fe       	sbrs	r10, 4
 544:	10 c0       	rjmp	.+32     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 546:	b6 01       	movw	r22, r12
 548:	80 e3       	ldi	r24, 0x30	; 48
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	0e 94 ff 02 	call	0x5fe	; 0x5fe <fputc>
 550:	a2 fe       	sbrs	r10, 2
 552:	17 c0       	rjmp	.+46     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 554:	a1 fc       	sbrc	r10, 1
 556:	03 c0       	rjmp	.+6      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 558:	88 e7       	ldi	r24, 0x78	; 120
 55a:	90 e0       	ldi	r25, 0x00	; 0
 55c:	02 c0       	rjmp	.+4      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 55e:	88 e5       	ldi	r24, 0x58	; 88
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	b6 01       	movw	r22, r12
 564:	0c c0       	rjmp	.+24     	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 566:	8a 2d       	mov	r24, r10
 568:	86 78       	andi	r24, 0x86	; 134
 56a:	59 f0       	breq	.+22     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 56c:	a1 fe       	sbrs	r10, 1
 56e:	02 c0       	rjmp	.+4      	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 570:	8b e2       	ldi	r24, 0x2B	; 43
 572:	01 c0       	rjmp	.+2      	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 574:	80 e2       	ldi	r24, 0x20	; 32
 576:	a7 fc       	sbrc	r10, 7
 578:	8d e2       	ldi	r24, 0x2D	; 45
 57a:	b6 01       	movw	r22, r12
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	0e 94 ff 02 	call	0x5fe	; 0x5fe <fputc>
 582:	89 14       	cp	r8, r9
 584:	38 f4       	brcc	.+14     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 586:	b6 01       	movw	r22, r12
 588:	80 e3       	ldi	r24, 0x30	; 48
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	0e 94 ff 02 	call	0x5fe	; 0x5fe <fputc>
 590:	9a 94       	dec	r9
 592:	f7 cf       	rjmp	.-18     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 594:	8a 94       	dec	r8
 596:	f3 01       	movw	r30, r6
 598:	e8 0d       	add	r30, r8
 59a:	f1 1d       	adc	r31, r1
 59c:	80 81       	ld	r24, Z
 59e:	b6 01       	movw	r22, r12
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 94 ff 02 	call	0x5fe	; 0x5fe <fputc>
 5a6:	81 10       	cpse	r8, r1
 5a8:	f5 cf       	rjmp	.-22     	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 5aa:	22 20       	and	r2, r2
 5ac:	09 f4       	brne	.+2      	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5ae:	42 ce       	rjmp	.-892    	; 0x234 <vfprintf+0x24>
 5b0:	b6 01       	movw	r22, r12
 5b2:	80 e2       	ldi	r24, 0x20	; 32
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	0e 94 ff 02 	call	0x5fe	; 0x5fe <fputc>
 5ba:	2a 94       	dec	r2
 5bc:	f6 cf       	rjmp	.-20     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 5be:	f6 01       	movw	r30, r12
 5c0:	86 81       	ldd	r24, Z+6	; 0x06
 5c2:	97 81       	ldd	r25, Z+7	; 0x07
 5c4:	02 c0       	rjmp	.+4      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c6:	8f ef       	ldi	r24, 0xFF	; 255
 5c8:	9f ef       	ldi	r25, 0xFF	; 255
 5ca:	2b 96       	adiw	r28, 0x0b	; 11
 5cc:	e2 e1       	ldi	r30, 0x12	; 18
 5ce:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__epilogue_restores__>

000005d2 <strnlen_P>:
 5d2:	fc 01       	movw	r30, r24
 5d4:	05 90       	lpm	r0, Z+
 5d6:	61 50       	subi	r22, 0x01	; 1
 5d8:	70 40       	sbci	r23, 0x00	; 0
 5da:	01 10       	cpse	r0, r1
 5dc:	d8 f7       	brcc	.-10     	; 0x5d4 <strnlen_P+0x2>
 5de:	80 95       	com	r24
 5e0:	90 95       	com	r25
 5e2:	8e 0f       	add	r24, r30
 5e4:	9f 1f       	adc	r25, r31
 5e6:	08 95       	ret

000005e8 <strnlen>:
 5e8:	fc 01       	movw	r30, r24
 5ea:	61 50       	subi	r22, 0x01	; 1
 5ec:	70 40       	sbci	r23, 0x00	; 0
 5ee:	01 90       	ld	r0, Z+
 5f0:	01 10       	cpse	r0, r1
 5f2:	d8 f7       	brcc	.-10     	; 0x5ea <strnlen+0x2>
 5f4:	80 95       	com	r24
 5f6:	90 95       	com	r25
 5f8:	8e 0f       	add	r24, r30
 5fa:	9f 1f       	adc	r25, r31
 5fc:	08 95       	ret

000005fe <fputc>:
 5fe:	0f 93       	push	r16
 600:	1f 93       	push	r17
 602:	cf 93       	push	r28
 604:	df 93       	push	r29
 606:	fb 01       	movw	r30, r22
 608:	23 81       	ldd	r18, Z+3	; 0x03
 60a:	21 fd       	sbrc	r18, 1
 60c:	03 c0       	rjmp	.+6      	; 0x614 <fputc+0x16>
 60e:	8f ef       	ldi	r24, 0xFF	; 255
 610:	9f ef       	ldi	r25, 0xFF	; 255
 612:	2c c0       	rjmp	.+88     	; 0x66c <fputc+0x6e>
 614:	22 ff       	sbrs	r18, 2
 616:	16 c0       	rjmp	.+44     	; 0x644 <fputc+0x46>
 618:	46 81       	ldd	r20, Z+6	; 0x06
 61a:	57 81       	ldd	r21, Z+7	; 0x07
 61c:	24 81       	ldd	r18, Z+4	; 0x04
 61e:	35 81       	ldd	r19, Z+5	; 0x05
 620:	42 17       	cp	r20, r18
 622:	53 07       	cpc	r21, r19
 624:	44 f4       	brge	.+16     	; 0x636 <fputc+0x38>
 626:	a0 81       	ld	r26, Z
 628:	b1 81       	ldd	r27, Z+1	; 0x01
 62a:	9d 01       	movw	r18, r26
 62c:	2f 5f       	subi	r18, 0xFF	; 255
 62e:	3f 4f       	sbci	r19, 0xFF	; 255
 630:	31 83       	std	Z+1, r19	; 0x01
 632:	20 83       	st	Z, r18
 634:	8c 93       	st	X, r24
 636:	26 81       	ldd	r18, Z+6	; 0x06
 638:	37 81       	ldd	r19, Z+7	; 0x07
 63a:	2f 5f       	subi	r18, 0xFF	; 255
 63c:	3f 4f       	sbci	r19, 0xFF	; 255
 63e:	37 83       	std	Z+7, r19	; 0x07
 640:	26 83       	std	Z+6, r18	; 0x06
 642:	14 c0       	rjmp	.+40     	; 0x66c <fputc+0x6e>
 644:	8b 01       	movw	r16, r22
 646:	ec 01       	movw	r28, r24
 648:	fb 01       	movw	r30, r22
 64a:	00 84       	ldd	r0, Z+8	; 0x08
 64c:	f1 85       	ldd	r31, Z+9	; 0x09
 64e:	e0 2d       	mov	r30, r0
 650:	09 95       	icall
 652:	89 2b       	or	r24, r25
 654:	e1 f6       	brne	.-72     	; 0x60e <fputc+0x10>
 656:	d8 01       	movw	r26, r16
 658:	16 96       	adiw	r26, 0x06	; 6
 65a:	8d 91       	ld	r24, X+
 65c:	9c 91       	ld	r25, X
 65e:	17 97       	sbiw	r26, 0x07	; 7
 660:	01 96       	adiw	r24, 0x01	; 1
 662:	17 96       	adiw	r26, 0x07	; 7
 664:	9c 93       	st	X, r25
 666:	8e 93       	st	-X, r24
 668:	16 97       	sbiw	r26, 0x06	; 6
 66a:	ce 01       	movw	r24, r28
 66c:	df 91       	pop	r29
 66e:	cf 91       	pop	r28
 670:	1f 91       	pop	r17
 672:	0f 91       	pop	r16
 674:	08 95       	ret

00000676 <__ultoa_invert>:
 676:	fa 01       	movw	r30, r20
 678:	aa 27       	eor	r26, r26
 67a:	28 30       	cpi	r18, 0x08	; 8
 67c:	51 f1       	breq	.+84     	; 0x6d2 <__ultoa_invert+0x5c>
 67e:	20 31       	cpi	r18, 0x10	; 16
 680:	81 f1       	breq	.+96     	; 0x6e2 <__ultoa_invert+0x6c>
 682:	e8 94       	clt
 684:	6f 93       	push	r22
 686:	6e 7f       	andi	r22, 0xFE	; 254
 688:	6e 5f       	subi	r22, 0xFE	; 254
 68a:	7f 4f       	sbci	r23, 0xFF	; 255
 68c:	8f 4f       	sbci	r24, 0xFF	; 255
 68e:	9f 4f       	sbci	r25, 0xFF	; 255
 690:	af 4f       	sbci	r26, 0xFF	; 255
 692:	b1 e0       	ldi	r27, 0x01	; 1
 694:	3e d0       	rcall	.+124    	; 0x712 <__ultoa_invert+0x9c>
 696:	b4 e0       	ldi	r27, 0x04	; 4
 698:	3c d0       	rcall	.+120    	; 0x712 <__ultoa_invert+0x9c>
 69a:	67 0f       	add	r22, r23
 69c:	78 1f       	adc	r23, r24
 69e:	89 1f       	adc	r24, r25
 6a0:	9a 1f       	adc	r25, r26
 6a2:	a1 1d       	adc	r26, r1
 6a4:	68 0f       	add	r22, r24
 6a6:	79 1f       	adc	r23, r25
 6a8:	8a 1f       	adc	r24, r26
 6aa:	91 1d       	adc	r25, r1
 6ac:	a1 1d       	adc	r26, r1
 6ae:	6a 0f       	add	r22, r26
 6b0:	71 1d       	adc	r23, r1
 6b2:	81 1d       	adc	r24, r1
 6b4:	91 1d       	adc	r25, r1
 6b6:	a1 1d       	adc	r26, r1
 6b8:	20 d0       	rcall	.+64     	; 0x6fa <__ultoa_invert+0x84>
 6ba:	09 f4       	brne	.+2      	; 0x6be <__ultoa_invert+0x48>
 6bc:	68 94       	set
 6be:	3f 91       	pop	r19
 6c0:	2a e0       	ldi	r18, 0x0A	; 10
 6c2:	26 9f       	mul	r18, r22
 6c4:	11 24       	eor	r1, r1
 6c6:	30 19       	sub	r19, r0
 6c8:	30 5d       	subi	r19, 0xD0	; 208
 6ca:	31 93       	st	Z+, r19
 6cc:	de f6       	brtc	.-74     	; 0x684 <__ultoa_invert+0xe>
 6ce:	cf 01       	movw	r24, r30
 6d0:	08 95       	ret
 6d2:	46 2f       	mov	r20, r22
 6d4:	47 70       	andi	r20, 0x07	; 7
 6d6:	40 5d       	subi	r20, 0xD0	; 208
 6d8:	41 93       	st	Z+, r20
 6da:	b3 e0       	ldi	r27, 0x03	; 3
 6dc:	0f d0       	rcall	.+30     	; 0x6fc <__ultoa_invert+0x86>
 6de:	c9 f7       	brne	.-14     	; 0x6d2 <__ultoa_invert+0x5c>
 6e0:	f6 cf       	rjmp	.-20     	; 0x6ce <__ultoa_invert+0x58>
 6e2:	46 2f       	mov	r20, r22
 6e4:	4f 70       	andi	r20, 0x0F	; 15
 6e6:	40 5d       	subi	r20, 0xD0	; 208
 6e8:	4a 33       	cpi	r20, 0x3A	; 58
 6ea:	18 f0       	brcs	.+6      	; 0x6f2 <__ultoa_invert+0x7c>
 6ec:	49 5d       	subi	r20, 0xD9	; 217
 6ee:	31 fd       	sbrc	r19, 1
 6f0:	40 52       	subi	r20, 0x20	; 32
 6f2:	41 93       	st	Z+, r20
 6f4:	02 d0       	rcall	.+4      	; 0x6fa <__ultoa_invert+0x84>
 6f6:	a9 f7       	brne	.-22     	; 0x6e2 <__ultoa_invert+0x6c>
 6f8:	ea cf       	rjmp	.-44     	; 0x6ce <__ultoa_invert+0x58>
 6fa:	b4 e0       	ldi	r27, 0x04	; 4
 6fc:	a6 95       	lsr	r26
 6fe:	97 95       	ror	r25
 700:	87 95       	ror	r24
 702:	77 95       	ror	r23
 704:	67 95       	ror	r22
 706:	ba 95       	dec	r27
 708:	c9 f7       	brne	.-14     	; 0x6fc <__ultoa_invert+0x86>
 70a:	00 97       	sbiw	r24, 0x00	; 0
 70c:	61 05       	cpc	r22, r1
 70e:	71 05       	cpc	r23, r1
 710:	08 95       	ret
 712:	9b 01       	movw	r18, r22
 714:	ac 01       	movw	r20, r24
 716:	0a 2e       	mov	r0, r26
 718:	06 94       	lsr	r0
 71a:	57 95       	ror	r21
 71c:	47 95       	ror	r20
 71e:	37 95       	ror	r19
 720:	27 95       	ror	r18
 722:	ba 95       	dec	r27
 724:	c9 f7       	brne	.-14     	; 0x718 <__ultoa_invert+0xa2>
 726:	62 0f       	add	r22, r18
 728:	73 1f       	adc	r23, r19
 72a:	84 1f       	adc	r24, r20
 72c:	95 1f       	adc	r25, r21
 72e:	a0 1d       	adc	r26, r0
 730:	08 95       	ret

00000732 <__prologue_saves__>:
 732:	2f 92       	push	r2
 734:	3f 92       	push	r3
 736:	4f 92       	push	r4
 738:	5f 92       	push	r5
 73a:	6f 92       	push	r6
 73c:	7f 92       	push	r7
 73e:	8f 92       	push	r8
 740:	9f 92       	push	r9
 742:	af 92       	push	r10
 744:	bf 92       	push	r11
 746:	cf 92       	push	r12
 748:	df 92       	push	r13
 74a:	ef 92       	push	r14
 74c:	ff 92       	push	r15
 74e:	0f 93       	push	r16
 750:	1f 93       	push	r17
 752:	cf 93       	push	r28
 754:	df 93       	push	r29
 756:	cd b7       	in	r28, 0x3d	; 61
 758:	de b7       	in	r29, 0x3e	; 62
 75a:	ca 1b       	sub	r28, r26
 75c:	db 0b       	sbc	r29, r27
 75e:	0f b6       	in	r0, 0x3f	; 63
 760:	f8 94       	cli
 762:	de bf       	out	0x3e, r29	; 62
 764:	0f be       	out	0x3f, r0	; 63
 766:	cd bf       	out	0x3d, r28	; 61
 768:	09 94       	ijmp

0000076a <__epilogue_restores__>:
 76a:	2a 88       	ldd	r2, Y+18	; 0x12
 76c:	39 88       	ldd	r3, Y+17	; 0x11
 76e:	48 88       	ldd	r4, Y+16	; 0x10
 770:	5f 84       	ldd	r5, Y+15	; 0x0f
 772:	6e 84       	ldd	r6, Y+14	; 0x0e
 774:	7d 84       	ldd	r7, Y+13	; 0x0d
 776:	8c 84       	ldd	r8, Y+12	; 0x0c
 778:	9b 84       	ldd	r9, Y+11	; 0x0b
 77a:	aa 84       	ldd	r10, Y+10	; 0x0a
 77c:	b9 84       	ldd	r11, Y+9	; 0x09
 77e:	c8 84       	ldd	r12, Y+8	; 0x08
 780:	df 80       	ldd	r13, Y+7	; 0x07
 782:	ee 80       	ldd	r14, Y+6	; 0x06
 784:	fd 80       	ldd	r15, Y+5	; 0x05
 786:	0c 81       	ldd	r16, Y+4	; 0x04
 788:	1b 81       	ldd	r17, Y+3	; 0x03
 78a:	aa 81       	ldd	r26, Y+2	; 0x02
 78c:	b9 81       	ldd	r27, Y+1	; 0x01
 78e:	ce 0f       	add	r28, r30
 790:	d1 1d       	adc	r29, r1
 792:	0f b6       	in	r0, 0x3f	; 63
 794:	f8 94       	cli
 796:	de bf       	out	0x3e, r29	; 62
 798:	0f be       	out	0x3f, r0	; 63
 79a:	cd bf       	out	0x3d, r28	; 61
 79c:	ed 01       	movw	r28, r26
 79e:	08 95       	ret

000007a0 <_exit>:
 7a0:	f8 94       	cli

000007a2 <__stop_program>:
 7a2:	ff cf       	rjmp	.-2      	; 0x7a2 <__stop_program>
